#include "Waterchip.h"
#include "Common/Convert/Hexadecimal.h"

describe("Hexadecimal Conversions") begin

    it("can convert hexadecimal string to decimal") begin
        // Single digit numbers
        expect(HexToDecimal("0"))                to_equal(0);
        expect(HexToDecimal("9"))                to_equal(9);
        // Lowercase
        expect(HexToDecimal("a"))                to_equal(10);
        expect(HexToDecimal("f"))                to_equal(15);
        expect(HexToDecimal("aa"))               to_equal(170);
        expect(HexToDecimal("af"))               to_equal(175);
        expect(HexToDecimal("ea"))               to_equal(234);
        expect(HexToDecimal("ff"))               to_equal(255);
        expect(HexToDecimal("abcdef"))           to_equal(11259375);
        expect(HexToDecimal("abcdef0123456789")) to_equal(12379813738877118345);
        // Uppercase
        expect(HexToDecimal("A"))                to_equal(10);
        expect(HexToDecimal("F"))                to_equal(15);
        expect(HexToDecimal("AA"))               to_equal(170);
        expect(HexToDecimal("AF"))               to_equal(175);
        expect(HexToDecimal("EA"))               to_equal(234);
        expect(HexToDecimal("FF"))               to_equal(255);
        expect(HexToDecimal("ABCDEF"))           to_equal(11259375);
        expect(HexToDecimal("ABCDEF0123456789")) to_equal(12379813738877118345);
    end

    it("can convert decimal to hexadecimal") begin
        expect(DecimalToHex(0))                    to_equal("0");
        expect(DecimalToHex(9))                    to_equal("9");
        expect(DecimalToHex(10))                   to_equal("A");
        expect(DecimalToHex(15))                   to_equal("F");
        expect(DecimalToHex(170))                  to_equal("AA");
        expect(DecimalToHex(175))                  to_equal("AF");
        expect(DecimalToHex(234))                  to_equal("EA");
        expect(DecimalToHex(255))                  to_equal("FF");
        expect(DecimalToHex(123456))               to_equal("1E240");
        expect(DecimalToHex(11259375))             to_equal("ABCDEF");
        expect(DecimalToHex(1234567890))           to_equal("499602D2");
    end

    it("HexToDecimal() returns -1 if given a float") begin
        expect(HexToDecimal(123.456)) to_equal(-1);
        expect(HexToDecimal(420.69))  to_equal(-1);
    end

    it("HexToDecimal() returns integer value if given an int") begin
        expect(HexToDecimal(1))   to_equal(1);
        expect(HexToDecimal(69))  to_equal(69);
        expect(HexToDecimal(420)) to_equal(420);
    end

    it("HexToDecimal() returns -1 if given a string with invalid characters") begin
        expect(HexToDecimal("qwerty")) to_equal(-1);
        expect(HexToDecimal("g"))      to_equal(-1);
    end

    it("DecimalToHex() returns '-' signed hex for negative integers") begin
        expect(DecimalToHex(-9))                    to_equal("-9");
        expect(DecimalToHex(-170))                  to_equal("-AA");
        expect(DecimalToHex(-123456))               to_equal("-1E240");
    end

    it("DecimalToHex() returns hex for rounded float when provided a float") begin
        expect(DecimalToHex(123.456)) to_equal("7B");  // round down
        expect(DecimalToHex(420.69))  to_equal("1A5"); // round up
    end

    it("DecimalToHex() returns '-' signed hex for negative floats") begin
        expect(DecimalToHex(-123.456)) to_equal("-7B");  // round down
        expect(DecimalToHex(-420.69))  to_equal("-1A5"); // round up
    end

    it("DecimalToHex() returns string value if given an string") begin
        expect(DecimalToHex("hi"))         to_equal("hi");
        expect(DecimalToHex("sixty nine")) to_equal("sixty nine");
    end
end
